"""sharing data

Revision ID: 54cc867f79ff
Revises: 
Create Date: 2024-04-23 11:31:10.876515

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '54cc867f79ff'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scope', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('scope')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Enum('admin', 'device_manager', 'staff', 'viewer', name='roletype'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('temp_password', sa.String(), nullable=True),
    sa.Column('temp_password_created_at', sa.DateTime(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('phone_no', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('postal_code', sa.String(), nullable=False),
    sa.Column('profile_pic_url', sa.String(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.Column('allow_notification', sa.Boolean(), nullable=False),
    sa.Column('designation', sa.Enum('manager', 'developer', 'hr', 'it_support', 'ceo', 'viewer', name='designation'), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('default_password', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('device',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mac_address', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('brand', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('available', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='devicestatus'), nullable=False),
    sa.Column('bill_image', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('LAPTOP', 'TABLET', 'PHONE', 'DESKTOP', name='devicetype'), nullable=False),
    sa.Column('product_images', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('purchase_date', sa.DateTime(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('specification', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mac_address')
    )
    op.create_table('roles_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_request_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('borrowed_date', sa.DateTime(), nullable=True),
    sa.Column('returned_date', sa.DateTime(), nullable=True),
    sa.Column('expected_return_date', sa.DateTime(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_device_request_records_id'), 'device_request_records', ['id'], unique=False)
    op.create_table('maintenance_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('purpose', sa.Enum('REPAIR', 'UPGRADE', 'EXCHANGE', name='purpose'), nullable=False),
    sa.Column('cost', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('sent_for_repair', sa.DateTime(), nullable=True),
    sa.Column('returned_from_repair', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('maintenance_history')
    op.drop_index(op.f('ix_device_request_records_id'), table_name='device_request_records')
    op.drop_table('device_request_records')
    op.drop_table('users_roles')
    op.drop_table('roles_permissions')
    op.drop_table('device')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('permission')
    # ### end Alembic commands ###
